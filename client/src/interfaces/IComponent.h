#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////

#include <memory>

//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////

#include <entt.hpp>
#include "olcPixelGameEngine.h"

//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class IComponent {
public:
    explicit IComponent() = default;
    virtual ~IComponent() = default;

    // Public Functions

protected:

    // Protected Functions

private:
    IComponent(const IComponent&) = delete;
    IComponent(IComponent &&) = delete;
    IComponent& operator=(const IComponent&) = delete;
    IComponent&& operator=(IComponent&&) = delete;

private:
    // Private Functions

private:
    // Member Variables

};