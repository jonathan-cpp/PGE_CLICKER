#pragma once

//////////////////////////////////////////////////////////
// Standard Library Headers
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// External Library Headers
//////////////////////////////////////////////////////////

#include "olcPixelGameEngine.h"

//////////////////////////////////////////////////////////
// Project Headers
//////////////////////////////////////////////////////////

#include "Constants.h"
#include "SceneManager.h"

//////////////////////////////////////////////////////////
// Forward Declarations
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Constants and Enums
//////////////////////////////////////////////////////////



//////////////////////////////////////////////////////////
// Class Declaration
//////////////////////////////////////////////////////////

class Client : public olc::PixelGameEngine {
public:
    explicit Client();
    virtual ~Client() = default;

    // Public Functions
    bool OnUserCreate() override;
    bool OnUserUpdate(float fElapsedTime) override;
    bool OnUserDestroy() override;

protected:

    // Protected Functions

private:
    Client(const Client&) = delete;
    Client(Client &&) = delete;
    Client& operator=(const Client&) = delete;
    Client&& operator=(Client&&) = delete;

private:
    // Private Functions

private:
    SceneManager m_sceneManager;

};